#	Important: Name of properties file must be lowercase
#	d: show date of process, example: %d{HH:mm:ss,SSS} or %d{dd MMM yyyy HH:mm:ss,SSS} or %d{dd MMM yyyy HH:mm:ss}
#	c: show class of process (example: %c{1} = TestXYZ.java or %c{2} = test.TestXYZ.java)
#	L: show line of c above
#	m: message of process
#	n: line seperator

#This is root log. If you use multi log file, you must set  additivity = false to avoid log from root log
log4j.rootLogger =INFO, ERROR, stdout, file
log4j.category.your.category.name=WARN

# Redirect log messages to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender

log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss} %p %c{1}:%L - %m%n

# Redirect log messages to a log file (DailyRollingFileAppender will roll over the file and the naming convention to be followed)
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender

#outputs to Tomcat home
log4j.appender.file.File=D:/Nguyen/The Dawn has arrived/logs/test3_all.log
log4j.appender.file.MaxFileSize=5MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
# Set the DatePattern (This indicates when to roll over the file and the naming convention to be followed. By default, cu\u1ED9n qua is performed at midnight each day.)
log4j.appender.file.DatePattern='.' yyyy-MM-dd-a

# FIRST_APPENDER - used to log messages in the admin-logs.log file.
log4j.logger.FIRST_APPENDER=DEBUG, FIRST_APPENDER

log4j.appender.FIRST_APPENDER=org.apache.log4j.DailyRollingFileAppender
log4j.appender.FIRST_APPENDER.maxFileSize=10MB
log4j.appender.FIRST_APPENDER.MaxBackupIndex=2
log4j.appender.FIRST_APPENDER.layout=org.apache.log4j.PatternLayout
log4j.appender.FIRST_APPENDER.layout.ConversionPattern=[%d{ISO8601}]%5p%6.6r[%t]%x(%F:%L) - %m%n
log4j.appender.FIRST_APPENDER.File=D:/Nguyen/The Dawn has arrived/logs/test1.log

# SECOND_APPENDER - used to log messages in the report-logs.log file.
log4j.logger.SECOND_APPENDER=DEBUG, SECOND_APPENDER

log4j.appender.SECOND_APPENDER=org.apache.log4j.RollingFileAppender
log4j.appender.SECOND_APPENDER.maxFileSize=10MB
log4j.appender.SECOND_APPENDER.MaxBackupIndex=2
log4j.appender.SECOND_APPENDER.layout=org.apache.log4j.PatternLayout
log4j.appender.SECOND_APPENDER.layout.ConversionPattern=[%d{ISO8601}]%5p%6.6r[%t]%x(%F:%L) - %m%n
log4j.appender.SECOND_APPENDER.File=D:/Nguyen/The Dawn has arrived/logs/test2.log

# Mentions the package path to write logs separately
# Like: com.dante.learn.jms.multiAMQ
log4j.logger.com.dante.learn.jms.multiAMQ=DEBUG,FIRST_APPENDER 
log4j.logger.com.dante.controller=DEBUG,SECOND_APPENDER 

#1/ additivity: use to avoid to the redundancy of same log from multi log file
#example: logA, logB and logParent. We just want to show logA without content of logParent, set additivity = false

#    log4j.category.com.demo.moduleone = INFO, moduleOneFileAppender
#    log4j.additivity.com.demo.moduleone = false
#    log4j.category.com.demo.moduletwo = INFO, moduleTwoFileAppender
#    log4j.additivity.com.demo.moduletwo = false
#    log4j.rootLogger = INFO, rootFileAppender